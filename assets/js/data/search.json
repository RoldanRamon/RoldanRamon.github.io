[ { "title": "Compra de Pneus", "url": "/posts/Estudo-para-Compra-de-Pneus/", "categories": "Data Science, Tydeverse, Web Scrapping", "tags": "Tydeverse, Web Scrapping, Analitycs, Dashboard, Data Science, ETL, Git, GitHub, R, Linux, GGPLOT", "date": "2023-02-19 00:00:00 -0300", "snippet": "Principal ObjetivoEste estudo busca utilizar técnicas de Data Science juntamente com strategic sourcing e metodologias ágeis para sugerir a melhor opção de compra de pneus conforme opções do mercado varejista online.O produto que procuramos é um pneu aro 14 e será escolhido conforme melhor nota no indicador aqui criado: “Nota_Conceitual”.Motivação do EstudoRecentemente tive a felicidade de comprar meu primeiro carro, um lindo Ford Ka branco modelo 2017, mas como todo carro de segunda mão sempre precisamos arrumar alguma coisa.Orientado para cultura de data driven, e muita experiencia na área de suprimentos, decidi realizar uma pesquisa de mercado.Organização do TrabalhoBreve ExplicaçãoBuscando eficiência dividiremos o trabalho em grandes partes:1- Consultar o site do INMETRO para: * Analisar quais critérios a organização reguladora considera como essenciais. * Esta etapa também visa entender quem são os principais fornecedores e principais produtos.A ideia é não deixarmos de fora algum produto e/ou fornecedor de boa qualidade, mas com pouca relevância no mercado varejista online.2- Realizar uma consulta de mercado em todos os produtos disponíveis no site pneus store, que se enquadrem nas características do produto que procuramos, para entender as condições comerciais como preço, prazo de entrega e valor do frete.3- Escolher o melhor produto, conforme desempenho na nota conceitual, e realizar a compra.Cronograma de ProjetoUtilizamos o gráfico de Gantt para elaborar um cronograma de projeto, para organizar tempos e processos, e estimamos 20 dias de trabalho.Observação: Vale a pena destacar que trabalhei conforme disponibilidade diária após o expediente de trabalho, usando apróximadamente duas horas em cada dia.#Utilizaremos a biblioteca tidyverse para o tratamento, manipulação e vizualização de dados.library(tidyverse)# Criaremos um dataset com as principais atividadesdados &amp;lt;- tibble( tarefa = c(&quot;Definição do principal objetivo a ser alcançado&quot;, &quot;Versionar Projeto no GitHub, Criar Kanban, e Cronograma de Gantt&quot;, &quot;Fonte de dados: Estudar site do INMETRO e Pneus Store&quot;, &quot;Coleta de Dados: Realizar Web Scrapping e Tratamento (EDA)&quot;, &quot;Realizar Análise Inferencial: Nota Conceitual e Financeiro&quot;, &quot;Estruturar Informações no Artigo&quot;), inicio = as.Date(c(&quot;2023-01-28&quot;, &quot;2023-01-29&quot;, &quot;2023-01-31&quot;,&quot;2023-02-06&quot;,&quot;2023-02-12&quot;,&quot;2023-02-14&quot;)), fim = as.Date(c(&quot;2023-01-29&quot;, &quot;2023-01-30&quot;, &quot;2023-02-05&quot;,&quot;2023-02-12&quot;,&quot;2023-02-14&quot;,&quot;2023-02-19&quot;))) %&amp;gt;% mutate(tarefa = fct_inorder(tarefa), duracao = as.numeric(fim - inicio))# Criar o gráfico de Gantt com o ggplotggplot(dados, aes(x = inicio, y = tarefa, xend = fim, yend = tarefa, color = tarefa)) + geom_segment(size = 10,show.legend = FALSE) + theme_light()+ scale_x_date(date_labels = &quot;%d/%m/%Y&quot;,date_breaks = &quot;3 days&quot;, limits = c(min(dados$inicio),max(dados$fim))) + geom_text(aes(x = inicio + duracao/2, y = tarefa, label = paste0(duracao, &quot; dias&quot;)),color=&quot;white&quot;)+ theme(axis.text.x = element_text(angle = 45))+ labs(title = &quot;Cronograma do Projeto&quot;, x = &quot;&quot;, y = &quot;&quot;, fill = &quot;&quot;,subtitle = paste(&quot;Duração Total:&quot;,sum(as.numeric(dados$fim - dados$inicio)),&quot;Dias&quot;),caption = &quot;Observação: 2 horas de trabalho por dia&quot;)Versionar projeto no GitHubO trabalho foi desenvolvido usando um “Projeto” dentro da IDE Rstudio, e também criamos um repositório para ajudar no armazenamento e versionamento de todos os arquivos do projeto.Organização no KanbanAdotamos a ferramenta Kanban para organizar as atividades do projeto no formato de metodologia ágil:Detalhes sobre a Fonte de DadosInformações do INMETROO Instituto Nacional de Metrologia, Qualidade e Tecnologia INMETRO é uma autarquia federal vinculada ao Ministério da Economia. Sua missão institucional é prover confiança à sociedade brasileira nas medições e na qualidade dos produtos, por meio da Metrologia e da Avaliação da Conformidade, promovendo a harmonização das relações de consumo, a inovação e a competitividade do País.Neste trabalho utilizaremos os dados abertos do Programa Brasileiro de Etiquetagem (PBE), disponibilizados pelo governo federal, para auxiliar na escolha pautada em dados:Este Video didatico explica com maior riqueza de detalhes o significado dos códigos da etiqueta e como podemos interpreta-as para ajudar no esclarecimento.Loja Pneu StoreA Pneu Store é uma loja online especializada na comercialização de pneus para veículos em todo o território Brasileiro.Este site é referência de mercado por apresentar detalhes técnicos dos produtos, bem como preços competitivos de marcas renomeadas, e boas avaliações no reclame aqui.Vale a pena destacar que tive indicações tanto de alguns profissionais da área, mecânicos, quanto de amigos meus, consumidores finais, que compram e ainda não tiveram problema.No video tem todo um estudo detalhado sobre confiabilidade do site que apresenta que reforça a robustez da empresa.É avaliado principalmente: O endereço físico do sede da empresa que mostra a existência real da empresa, e também que ela trabalho com a modalidade de estoque; Detalhes sobre a holding, Grupo Level, que mostra a quantidade e distribuição das filiais; Situação cadastral de débitos com fornecedores e também com o governo federal; Nota e avaliações no reclameaqui; Certificações contra vazamento de dados; Volume do “trafego” para entender a quantidade de pessoas que compram diariamente; Parceiro comercial que realiza transporte. Coleta dos DadosPara realizar nosso estudo iremos aplicar uma técnica de data science chamada web scrapping que consiste em pegar as informações online da url.Utilizaremos a linguagem R como backend e framework proposto pela metodologia do tidyverse dando preferência para a biblioteca rvest.Dados do site Pneus Store#Primeiro vamos começar limpando o global environmentrm(list = ls())#Utilizaremos a biblioteca tidyverse para o tratamento, manipulação e vizualização de dados.library(tidyverse)#Utilizaremos a biblioteca Janitor para nos ajudar no saneamento e tratamento dos dadoslibrary(janitor)#A biblioteca rvest será utilizada para realizar web scrapping das informações disponíveis.library(rvest)#Para realizar a análise exploratória e apresentação gráfica também usaremos o pacote DataExplorerlibrary(DataExplorer)#Para nos ajudar na parte de visualização também utilizaremos o pacote Patchworklibrary(patchwork)#Dentro do site pneu store o caminho dos pneus aro 14 estão salvo em 4 páginasurls &amp;lt;- paste0(&quot;https://www.pneustore.com.br/categorias/pneus-de-carro/175-65-r14?q=%3Arelevance&amp;amp;page=&quot;, 0:4)#A variavel &quot;Links&quot; vai realizar um looping entre as 4 páginas e salvar a url de cada pneu em uma listalinks &amp;lt;-urls %&amp;gt;% map(read_html) %&amp;gt;% map( ~tibble(link = html_attr(html_nodes(.x, &quot;a&quot;), &quot;href&quot;)) %&amp;gt;% filter(str_detect(link, &quot;/categorias/pneus-de-carro/pneus-175-65r14/&quot;)) %&amp;gt;% distinct() %&amp;gt;% mutate(link = str_c(&quot;https://www.pneustore.com.br&quot;, link))) %&amp;gt;% bind_rows()#A variavel bases_pneus_store irá armazenar os dados de todos os produtos disponíveis por páginabases_pneus_store &amp;lt;- links %&amp;gt;% mutate(base = map(link, ~ read_html(.x) %&amp;gt;% html_node(&quot;table&quot;) %&amp;gt;% html_table() %&amp;gt;% as_tibble())) %&amp;gt;% unnest(cols = base) %&amp;gt;% rename(&#39;variavel&#39; = &#39;X1&#39;, &#39;resultado&#39; = &#39;X2&#39;) %&amp;gt;% pivot_wider(names_from = variavel,values_from = resultado) %&amp;gt;% janitor::clean_names() %&amp;gt;% mutate(nome = map(link, ~ read_html(.x) %&amp;gt;% html_nodes(&#39;h1&#39;) %&amp;gt;% html_text2()), resistencia_ao_rolamento = map(link, ~ read_html(.x) %&amp;gt;% html_node(&#39;.energy-efficiency&#39;) %&amp;gt;% html_attr(&#39;data-value&#39;)), aderencia_em_pista_molhada = map(link, ~ read_html(.x) %&amp;gt;% html_node(&#39;.water-adhesion&#39;) %&amp;gt;% html_attr(&#39;data-value&#39;)), ruido_externo = map(link, ~ read_html(.x) %&amp;gt;% html_node(&#39;.noise-level&#39;) %&amp;gt;% html_attr(&#39;data-value&#39;)), preco_a_vista = map(link, ~ read_html(.x) %&amp;gt;% html_nodes(&#39;.price.my-2.font-black&#39;) %&amp;gt;% html_text2() %&amp;gt;% parse_number(locale = locale(decimal_mark = &quot;,&quot;))), preco_parcelado = map(link, ~ read_html(.x) %&amp;gt;% html_node(xpath = &#39;//b&#39;) %&amp;gt;% html_text2() %&amp;gt;% parse_number(locale = locale(decimal_mark = &quot;,&quot;))),indice_de_peso = str_extract(indice_de_peso, &quot;(?&amp;lt;=- )[^ ]*&quot;) %&amp;gt;% parse_number(locale = locale(decimal_mark = &quot;,&quot;)),indice_de_velocidade = str_extract(indice_de_velocidade, &quot;(?&amp;lt;=- )[^ ]+(?= km)&quot;) %&amp;gt;% parse_number(locale = locale(decimal_mark = &quot;,&quot;)))Análise Exploratória (EDA)Analisando a base descobrimos que contém 36 variáveis e 69 modelos de pneus. Também é possível notar que nossa base contém diferentes tipos primitivos de dados:bases_pneus_store %&amp;gt;% glimpse()## Rows: 69## Columns: 36## $ link &amp;lt;chr&amp;gt; &quot;https://www.pneustore.c…## $ marca &amp;lt;chr&amp;gt; &quot;PIRELLI&quot;, &quot;FORMULA&quot;, &quot;F…## $ modelo &amp;lt;chr&amp;gt; &quot;CINTURATO P1&quot;, &quot;FORMULA…## $ medida &amp;lt;chr&amp;gt; &quot;175/65R14&quot;, &quot;175/65R14&quot;…## $ largura &amp;lt;chr&amp;gt; &quot;175mm&quot;, &quot;175mm&quot;, &quot;175mm…## $ perfil &amp;lt;chr&amp;gt; &quot;65%&quot;, &quot;65%&quot;, &quot;65%&quot;, &quot;65…## $ aro &amp;lt;chr&amp;gt; &quot;14&quot;, &quot;14&quot;, &quot;14&quot;, &quot;14&quot;, …## $ diametro_total_em_mm &amp;lt;chr&amp;gt; &quot;583.1&quot;, &quot;583.1&quot;, &quot;583.1…## $ indice_de_peso &amp;lt;dbl&amp;gt; 475, 475, 475, 475, 475,…## $ indice_de_velocidade &amp;lt;dbl&amp;gt; 190, 190, 190, 190, 190,…## $ rft_run_flat &amp;lt;chr&amp;gt; &quot;NÃO&quot;, &quot;NÃO&quot;, &quot;NÃO&quot;, &quot;NÃ…## $ tipo_de_construcao &amp;lt;chr&amp;gt; &quot;RADIAL&quot;, &quot;RADIAL&quot;, &quot;RAD…## $ peso &amp;lt;chr&amp;gt; &quot;6.78&quot;, &quot;6.572&quot;, &quot;6.351&quot;…## $ extra_load &amp;lt;chr&amp;gt; &quot;NÃO&quot;, &quot;NÃO&quot;, &quot;NÃO&quot;, &quot;NÃ…## $ protetor_de_bordas &amp;lt;chr&amp;gt; &quot;NÃO&quot;, &quot;NÃO&quot;, &quot;NÃO&quot;, &quot;NÃ…## $ sidewall &amp;lt;chr&amp;gt; &quot;BSW LETRAS PRETAS&quot;, &quot;BS…## $ tipo_de_terreno &amp;lt;chr&amp;gt; &quot;HT&quot;, &quot;HT&quot;, &quot;HT&quot;, &quot;HT&quot;, …## $ desenho &amp;lt;chr&amp;gt; &quot;Assimétrico&quot;, &quot;Assimétr…## $ tala_da_roda &amp;lt;chr&amp;gt; &quot;5&quot;, NA, NA, NA, NA, &quot;5.…## $ tala_possiveis_da_roda &amp;lt;chr&amp;gt; &quot;5-6&quot;, NA, NA, NA, NA, &quot;…## $ utqg &amp;lt;chr&amp;gt; &quot;420AA&quot;, &quot;180AB&quot;, &quot;200BB…## $ treadwear &amp;lt;chr&amp;gt; &quot;420&quot;, &quot;180&quot;, &quot;200&quot;, &quot;44…## $ tracao &amp;lt;chr&amp;gt; &quot;A&quot;, &quot;A&quot;, &quot;B&quot;, &quot;B&quot;, &quot;A&quot;,…## $ temperatura &amp;lt;chr&amp;gt; &quot;A&quot;, &quot;B&quot;, &quot;B&quot;, &quot;B&quot;, &quot;A&quot;,…## $ registro_inmetro &amp;lt;chr&amp;gt; &quot;001387/2012&quot;, &quot;001387/2…## $ garantia &amp;lt;chr&amp;gt; &quot;5 anos Contra Defeito d…## $ observacoes &amp;lt;chr&amp;gt; &quot;Produto novo,Imagem mer…## $ fabricante &amp;lt;chr&amp;gt; NA, &quot;PIRELLI&quot;, &quot;BRIDGEST…## $ tipo_de_montagem &amp;lt;chr&amp;gt; NA, NA, NA, NA, &quot;SEM CÂM…## $ profundidade_do_sulco &amp;lt;chr&amp;gt; NA, NA, NA, NA, NA, &quot;7.5…## $ nome &amp;lt;list&amp;gt; &quot;Pneu Pirelli Aro 14 Ci…## $ resistencia_ao_rolamento &amp;lt;list&amp;gt; &quot;C&quot;, &quot;E&quot;, &quot;E&quot;, &quot;E&quot;, &quot;F&quot;…## $ aderencia_em_pista_molhada &amp;lt;list&amp;gt; &quot;E&quot;, &quot;E&quot;, &quot;E&quot;, &quot;F&quot;, &quot;E&quot;…## $ ruido_externo &amp;lt;list&amp;gt; &quot;MEDIUM&quot;, &quot;HIGH&quot;, &quot;MEDI…## $ preco_a_vista &amp;lt;list&amp;gt; 359.9, 329.9, 319.9, 34…## $ preco_parcelado &amp;lt;list&amp;gt; 408.98, 374.89, 363.52,…Analisando os dados descobrimos que existem 30 fornecedores diferentes e que alguns têm um portifólio de produtos mais variado que outros fornecedores.Analisando os dados descobrimos que existem 49 modelos de pneus diferentes porque as variantes servem para atender necessidades diferentes, como por exemplo: desempenho em terrenos distintos e consumo de conbustível.bases_pneus_store %&amp;gt;% count(modelo,sort = TRUE) %&amp;gt;% ggplot(aes(x=reorder(modelo,n),y=n))+ geom_col(fill=&quot;lightblue&quot;)+ coord_flip()+ geom_text(aes(label=n))+ labs(title = &quot;Quantidade de Pneus por Modelo&quot;,y=&quot;&quot;,x=&quot;&quot;)Avaliação FinalSeleção das Principais VariáveisAvaliando qualidade dos dados descobrimos que algumas das 36 variáveis tem muitos dados faltantes:plot_missing(bases_pneus_store)Avaliando estas variáveis, vermelhas e roxas, entendemos que não são relevantes para o trabalho e por isso iremos desconsiderar as 6: preco_parcelado, tala_possiveis_da_roda, talas_da_roda, fabricante, tipo_de_montagem, profundidade_do_sulcoSeguindo a sugestão do INMETRO entendemos que as variáveis resistencia_ao_rolamento, aderencia_em_pista_molhada, e ruido_externo são fundamentais:Finalmente com base em pesquisa concluímos que 10 as principais variáveis principais para compor a nota_conceitual são: Resistência ao Rolamento (Obrigatório): Está diretamente relacionada à eficiência energética, uma vez que mede a energia absorvida quando o pneu está rodando. Com isso, quanto menor for a resistência ao rodar, menor será o consumo de combustível e, consequentemente, menor será o impacto ao meio ambiente (emissão de CO 2 ). Na etiqueta, os pneus serão classificados em seis níveis, sendo A o mais eficiente e até F. Fonte; Aderência em Pista Molhada (Obrigatório): É um indicador do desempenho que informa ao consumidor sobre a aderência do pneu em pistas molhadas. As escalas vão de A (melhor desempenho) até E, e abrange pneus para veículos de passeio e pesados. Essa classificação mede a distância percorrida pelo veículo após a frenagem quando a pista está molhada. Fonte; Ruído Externo (Obrigatório): Indica o nível do ruído produzido pelos pneus em decibéis (dB) e, consequentemente, o impacto no meio ambiente. Este critério deve ter como limite máximo 75 dB para pneus de veículos de passeio, 77 dB para pneus de veículos comerciais leves e 78 dB para pneus de caminhões e ônibus. Fonte; Tração (Obrigatório): É um índice baseado na capacidade do pneu parar um carro no asfalto ou concreto molhado. Não tem nada que ver com a habilidade do pneu fazer curvas. Há quatro categorias de tração, AA , A , B e C , AA sendo o mais alto e C o mais baixo. Fonte; Temperatura (Obrigatório): O índice de temperatura escrita no pneu indica a capacidade do pneu dissipar o calor e como lida com o acúmulo dele. Há três possíveis índices: A, B e C, A sendo o melhor e C o pior. O índice só se aplica a pneus inflados corretamente de acordo com o valor de pressão descrito no manual do carro. Inflação, excesso de velocidade ou excesso de peso, faz com que o pneu aqueça mais rapidamente, causando seu desgaste precoce e, possivelmente ocasionando falhas no desempenho. Fonte; Treadwear (Obrigatório): Este número pode variar de 60 a 700, e quanto maior o número, maior rendimento quilométrico terá o pneu. Por exemplo, um pneu Treadwear 400 deveria render duas vezes mais que um pneu com Treadwear 200. Vale lembrar, que nem sempre um pneu que dura mais é um pneu melhor, pois um pneu macio que tem maior aderência, poderá durar menos, mas oferecer um melhor desempenho em curvas e frenagens. Fonte; Índice de peso (Obrigatório): Para saber o peso máximo o seu pneu suporta, você também pode conferir na tabela de índices de carga. Você encontrará um destes números estampados no seu pneu depois da medida. Exemplo: na medida 205/70R16 112S, 112 é o número que designa o peso máximo por pneu, neste caso 112 representa 1120kg. Fonte; Preço (Opcional): Visando maior econômia quanto menor melhor.; Registro INMETRO (Opcional): Os pneus novos radiais de passeio, comerciais leves, caminhões e ônibus comercializados no mercado brasileiro, produzidos no Brasil ou importados, devem conter a etiqueta. Fonte; Índice de Velocidade (Opcional): Para encontrar a velocidade máxima que você pode dirigir com seu pneu, você pode consultar a tabela onde encontra todos os índices e velocidades respectivas. Você encontrará uma destas letras estampada no seu pneu depois da medida. Exemplo: na medida 215/45R17 100Y, Y é a letra que designa a velocidade máxima do pneu, neste caso Y representa 300 km/h na tabela. Fonte; Extra Load (Opcional): Os pneus reforçados ou EXTRA LOAD (XL) destinam-se aos veículos pesados ou equipados com uma motorização potente. Os flancos dos pneus reforçados são mais rígidos do que os dos pneus clássicos designados por “SL” para “Standard Load”. A rigidez dos flancos permite suportar uma carga, uma pressão e tensões mais elevadas. Fonte. Criação de Tabela com Nota ConceitualPara conseguirmos realizar a avaliação de trade-off comparando as melhores características com o melhor preço, vamos utilizar a uma nota conceitual onde as variáveis tem pesos distintos e a nota final irá ponderar quais produtos tem melhor desempenho.No calculo ponderado utilizaremos 10 variáveis, onde as obrigatórias terão um peso ponderado de 70% e as opcionais terão um peso de 30%.Dentro das obrigátorias consideramos que “nota_resistencia_ao_rolamento”, “nota_aderencia_em_pista_molhada”, “nota_ruido_externo” tem uma importância maior por serem as três principais avalidas pelo INMETRO.As demais notas obrigátorias “nota_tracao”, “nota_temperatura”, “nota_treadwear”, “nota_indice_de_peso” são atributos muito importantes para a durabilidade do produto.Um ponto importante é que a “nota_indice_de_peso” consideramos como nota zero caso os pneus não suportem o peso total do carro, dessa forma desclassifica produtos que não suportem o peso mínimo do veículo, conforme informações disponíveis no manual do fabricante.As varivárieis “nota_registro_inmetro”, “nota_indice_de_velocidade”, “nota_extra_load” foram consideradas opcionais porque caso se enquadrem nas condições são um “benefício plus” frente aos demais produtos concorrentes.#Cria dataset da nota conceitual e organiza os produtos conforme melhor desempenho base_para_nota_conceitual&amp;lt;- bases_pneus_store %&amp;gt;% select(nome, marca, resistencia_ao_rolamento, aderencia_em_pista_molhada, ruido_externo, tracao, temperatura, treadwear, indice_de_peso, registro_inmetro, indice_de_velocidade, preco_a_vista, preco_parcelado, link) %&amp;gt;% mutate( #Resistência ao Rolamento (Obrigatório) nota_resistencia_ao_rolamento = case_when( resistencia_ao_rolamento == &quot;A&quot; ~ 7, resistencia_ao_rolamento == &quot;B&quot; ~ 6, resistencia_ao_rolamento == &quot;C&quot; ~ 5, resistencia_ao_rolamento == &quot;D&quot; ~ 4, resistencia_ao_rolamento == &quot;E&quot; ~ 3, resistencia_ao_rolamento == &quot;F&quot; ~ 2, TRUE ~ 1), #Aderência em Pista Molhada (Obrigatório) nota_aderencia_em_pista_molhada = case_when( aderencia_em_pista_molhada == &quot;A&quot; ~ 7, aderencia_em_pista_molhada == &quot;B&quot; ~ 6, aderencia_em_pista_molhada == &quot;C&quot; ~ 5, aderencia_em_pista_molhada == &quot;D&quot; ~ 4, aderencia_em_pista_molhada == &quot;E&quot; ~ 3, aderencia_em_pista_molhada == &quot;F&quot; ~ 2, TRUE ~ 1), #Ruído Externo (Obrigatório) nota_ruido_externo = case_when( ruido_externo == &quot;A&quot; ~ 7, ruido_externo == &quot;B&quot; ~ 6, ruido_externo == &quot;C&quot; ~ 5, ruido_externo == &quot;D&quot; ~ 4, ruido_externo == &quot;E&quot; ~ 3, ruido_externo == &quot;F&quot; ~ 2, TRUE ~ 1), #Tração (Obrigatório) nota_tracao = case_when( tracao == &quot;AA&quot; ~ 4, tracao == &quot;A&quot; ~ 3, tracao == &quot;B&quot; ~ 2, TRUE ~ 1), #Temperatura (Obrigatório) nota_temperatura = case_when( temperatura == &quot;A&quot; ~ 3, temperatura == &quot;B&quot; ~ 2, TRUE ~ 1), #Treadwear (Obrigatório) nota_treadwear = case_when( treadwear &amp;gt;= 60 &amp;amp; treadwear &amp;lt;= 200 ~ 1, treadwear &amp;gt;= 201 &amp;amp; treadwear &amp;lt;= 400 ~ 2, TRUE ~ 3), #Índice de peso (Obrigatório) nota_indice_de_peso = case_when((indice_de_peso*4) &amp;lt;1007 ~ 0, indice_de_peso &amp;lt;= 462 ~ 1, indice_de_peso &amp;gt; 462 &amp;amp; indice_de_peso &amp;lt;= 475 ~ 2, TRUE ~ 3), #Registro INMETRO (Opcional) nota_registro_inmetro = case_when( is.na(registro_inmetro) ~ 0, TRUE ~1), #Índice de Velocidade (Opcional) nota_indice_de_velocidade = case_when(indice_de_velocidade &amp;lt;= 190 ~ 0, TRUE ~ 1), #Extra Load (Opcional) nota_extra_load = case_when(indice_de_velocidade == &quot;SIM&quot; ~ 1, TRUE ~ 0), nota_conceitual = (nota_resistencia_ao_rolamento * .7) + (nota_aderencia_em_pista_molhada * .7) + (nota_ruido_externo * .7) + (nota_tracao * .7) + (nota_temperatura * .7) + (nota_treadwear *.7) + (nota_indice_de_peso * .7) + (nota_registro_inmetro * .3) + (nota_indice_de_velocidade * .3) + (nota_extra_load * .3) ) %&amp;gt;% arrange(desc(nota_conceitual)) #Printa os primeiros produtos com melhor desempenho na nota conceitual base_para_nota_conceitual %&amp;gt;% unnest() %&amp;gt;% glimpse()## Rows: 23## Columns: 25## $ nome &amp;lt;chr&amp;gt; &quot;Pneu Ceat Aro 14 E…## $ marca &amp;lt;chr&amp;gt; &quot;CEAT&quot;, &quot;DYNAMO&quot;, &quot;…## $ resistencia_ao_rolamento &amp;lt;chr&amp;gt; &quot;C&quot;, &quot;E&quot;, &quot;E&quot;, &quot;C&quot;,…## $ aderencia_em_pista_molhada &amp;lt;chr&amp;gt; &quot;B&quot;, &quot;C&quot;, &quot;C&quot;, &quot;E&quot;,…## $ ruido_externo &amp;lt;chr&amp;gt; &quot;LOW&quot;, &quot;MEDIUM&quot;, &quot;M…## $ tracao &amp;lt;chr&amp;gt; &quot;B&quot;, &quot;A&quot;, &quot;A&quot;, &quot;A&quot;,…## $ temperatura &amp;lt;chr&amp;gt; &quot;A&quot;, &quot;A&quot;, &quot;A&quot;, &quot;A&quot;,…## $ treadwear &amp;lt;chr&amp;gt; &quot;440&quot;, &quot;420&quot;, &quot;420&quot;…## $ indice_de_peso &amp;lt;dbl&amp;gt; 475, 530, 475, 475,…## $ registro_inmetro &amp;lt;chr&amp;gt; &quot;002284/2018&quot;, &quot;001…## $ indice_de_velocidade &amp;lt;dbl&amp;gt; 190, 190, 210, 190,…## $ preco_a_vista &amp;lt;dbl&amp;gt; 379.90, 274.90, 449…## $ preco_parcelado &amp;lt;dbl&amp;gt; 431.70, 312.39, 511…## $ link &amp;lt;chr&amp;gt; &quot;https://www.pneust…## $ nota_resistencia_ao_rolamento &amp;lt;dbl&amp;gt; 5, 3, 3, 5, 5, 5, 3…## $ nota_aderencia_em_pista_molhada &amp;lt;dbl&amp;gt; 6, 5, 5, 3, 3, 3, 5…## $ nota_ruido_externo &amp;lt;dbl&amp;gt; 1, 1, 1, 1, 1, 1, 1…## $ nota_tracao &amp;lt;dbl&amp;gt; 2, 3, 3, 3, 3, 3, 3…## $ nota_temperatura &amp;lt;dbl&amp;gt; 3, 3, 3, 3, 3, 3, 2…## $ nota_treadwear &amp;lt;dbl&amp;gt; 3, 3, 3, 3, 3, 3, 3…## $ nota_indice_de_peso &amp;lt;dbl&amp;gt; 2, 3, 2, 2, 2, 2, 2…## $ nota_registro_inmetro &amp;lt;dbl&amp;gt; 1, 1, 1, 1, 1, 1, 1…## $ nota_indice_de_velocidade &amp;lt;dbl&amp;gt; 0, 0, 1, 0, 0, 0, 0…## $ nota_extra_load &amp;lt;dbl&amp;gt; 0, 0, 0, 0, 0, 0, 0…## $ nota_conceitual &amp;lt;dbl&amp;gt; 15.7, 15.0, 14.6, 1…Produto GanhadorCom base nas características técnicas elencadas o produto que melhor atenderia nossas necessidades é Pneu Dynamo Aro 14 MH01 175/65R14 86T.#Cria dataset dos top 20df &amp;lt;- base_para_nota_conceitual %&amp;gt;% distinct(nome, nota_conceitual,preco_a_vista) %&amp;gt;% unnest() %&amp;gt;% top_n(wt = nome,n = 20) #Cria medida calculada da nota média dos top 20linha_mean &amp;lt;- mean(df$nota_conceitual)#Cria gráfico mostrando o desempenho dos top 20ggplot(df, aes(x = reorder(nome, nota_conceitual),y = nota_conceitual))+ geom_col(fill=&quot;lightblue&quot;)+ coord_flip()+ theme_minimal()+ geom_text(aes(label=nota_conceitual))+ labs(x=&quot;Nome do Pneu&quot;,y=&quot;Nota Conceitual&quot;,title = &quot;Desempenho dos Top 20&quot;)+ geom_hline(yintercept = linha_mean, color = &quot;orange&quot;,linetype = &quot;dashed&quot;)+ annotate(geom = &quot;text&quot;, x = 20, y = linha_mean, label = &quot;Média da Nota Conceitual&quot;,color = &quot;orange&quot;)+ scale_y_continuous(n.breaks = 15)+ geom_label(aes(label=scales::dollar(preco_a_vista,prefix = &quot;R$&quot;,big.mark = &quot;.&quot;,decimal.mark = &quot;,&quot;)),hjust=4.5,color=&quot;blue&quot;,angle=45)+ annotate(geom = &quot;label&quot;, x = 20, y = 8, label = &quot;Preço à Vista&quot;,color = &quot;blue&quot;)Abaixo maiores detalhes técnicos do produto ganhador:Racional da Escolha do PagamentoNosso orçamento para compra é R$ 1.500 por isso vamos comprar 5 pneus, garantindo o pneu reserva “step”, e quanto a forma de pagamento o site nos disponibiliza duas opções: Parcelar no cartão de crédito ou pagar no PIX.Caso parcelemos no cartão de crédito podemos ter uma economia deixando o dinheiro aplicado rendendo 100% do CDI. A Calculadora Valor Investe nos ajudará a validar os cenários.Cenário 1: Na simulação abaixo mostra o resultado que teríamos se optássemos investir e retirar após 11 meses, ou seja adiamos a compra, onde teríamos uma aumento de capital de R$ 61,76:Cenário 2: Caso optemos por parcelar em 11 vezes, conforme gráfico abaixo onde vemos o rendimento acumulado mensalmente dada ação dos juros compostos, teríamos uma economia máxima de R$ 64,30:#Criamos uma tabela com base nos valores simuados na calculadoradf &amp;lt;- tibble(Month = c(&quot;Initial&quot;,&quot;Fev&quot;,&quot;Mar&quot;,&quot;Apr&quot;,&quot;May&quot;,&quot;Jun&quot;,&quot;Jul&quot;,&quot;Aug&quot;,&quot;Set&quot;,&quot;Oct&quot;,&quot;Nov&quot;,&quot;Dec&quot;), Investiment = c(1561.95,1567.69,1573.45,1579.23,1585.03,1590.85,1596.70,1602.57,1608.46,1614.37,1620.30,1626.25)) %&amp;gt;% mutate(Month = fct_inorder(Month),Saving = Investiment - 1561.95)#Gráfico do rendimento mensalp1 &amp;lt;- ggplot(data = df,aes(x=Month,y=Investiment)) + geom_col(fill=&quot;lightblue&quot;)+ geom_text(aes(label= scales::dollar(x = Investiment,prefix = &quot;R$&quot;,big.mark = &quot;.&quot;,decimal.mark = &quot;,&quot;)),angle=45,size=3)+ theme_minimal()+ scale_y_continuous(n.breaks = 10,labels = scales::dollar_format(prefix = &quot;R$&quot;,big.mark = &quot;.&quot;,decimal.mark = &quot;,&quot;))+ labs(title = &quot;Rendimento Mensal Considerando 100% CDI&quot;,subtitle = &#39;Valores corrigidos pela inflação&#39;,x=&quot;&quot;,y=&quot;&quot;)#Gráfico da economia mensalp2 &amp;lt;- ggplot(data = df,aes(x=Month,y=Saving)) + geom_col(fill=&quot;lightblue&quot;)+ geom_text(aes(label= scales::dollar(x = Saving,prefix = &quot;R$&quot;,big.mark = &quot;.&quot;,decimal.mark = &quot;,&quot;)),angle=45,size=3)+ theme_minimal()+ scale_y_continuous(n.breaks = 10,labels = scales::dollar_format(prefix = &quot;R$&quot;,big.mark = &quot;.&quot;,decimal.mark = &quot;,&quot;))+ labs(title = &quot;Economia Mensal em Relação ao Valor Total dos Pneus (R$1.561,95)&quot;,caption = &#39;Fonte: https://valorinveste.globo.com/ferramentas/calculadoras/investimentos&#39;,x=&quot;&quot;,y=&quot;&quot;)#Gráfico final comparativop1 + p2Cenário 3: Caso optemos por realizar o pagamento no PIX teríamos uma economia de R$ 187,43 (R$ 1.561,95-R$ 1.374,52).Tabela comparativa de economia em relação ao valor R$ 1.561,95: Cenário 1 Cenário 2 Cenário 3 3,95% 4,12% 12% O cenário 3 foi o ganhador, pagamento via PIX, e este percentual triplica quando comparamos com o preço oferecido pelas lojas físicas nos comércios locais.Considerações FinaisEste trabalho trouxe benefícios como maior confiança na tomada de decisão e economia financeira, além de ter sido muito divertido, e uma das coisas mais interessantes foi que o produto ganhador não foi o mais caro e/ou aquele recomendado pela montadora.Por isso estou satisfeito com a compra e inclusive os pneus já chegaram em casa:Premissas: Este trabalho foi realizado com a linguagem R, IDE Rstudio, com Quarto, e sistema operacional Linux Mint.Foram utilizados conhecimentos de data science e metodologias ágeis. Seguindo as boas práticas do mercado demos preferência para bibliotecas do tidyverse.Observações Tanto o script completo quanto a base de dados consolidada estão disponíveis no meu Repositório do GitHub. Este artigo tem finalidade de estudo pessoal e não é recomendação de compra e/ou venda, caso tenha alguma dúvida técnica procure um mecânico de sua confiança. Os preços e disponibilidade de estoque estão sujeitos à mudança dinâmica do mercado varejista; As especificações técnicas podem sofrer alterações conforme novos decretos da agência regulamentadora; O script para raspagem de dados foi criado considerando a estrutura atual da página pneus store, e mudanças estruturais no código fonte da página podem causar interferências no funcionamento. Como sugestão cabe lembrar que para raspagem de dados sempre verifique as clausulas de LGPD. " }, { "title": "IBOV Project", "url": "/posts/IBOV-Project/", "categories": "Data Science, Tydeverse", "tags": "Machine Learning, Tydeverse, Times Series, IBOV, Data Science, ETL", "date": "2023-01-22 00:00:00 -0300", "snippet": "Objetivo do trabalhoO trabalho busca desenvolver um dashboard que rode um modelo de machine learning capaz de prever o movimento do dia seguinte no indice ibovespa, baseado em dados históricos disponibilizados via API no yahoo finace, e para isso serão aplicadas técnicas estatisticas de regressão logística e regressão linear em series temporáis.O resultado final esta disponível no dashboard que pode ser acessado em:Dashboard - URLAviso: Este estudo não é uma recomendação de compra ou venda, mas sim um estudo teorico de data science. O mercado financeiro é volátil e envolve riscos, por isso estude bem antes de realizar operações e converse com seu consultor.Organização do trabalhoPremissas:Este trabalho foi realizado com a linguagem R, IDE Rstudio, e sistema operacional Linux Mint.Foram utilizados conhecimentos de data science e metodologias ágeis.Seguindo as boas práticas do mercado demos preferencia para bibliotecas do tidyverse.Principais Etapas: Definição do objetivo do trabalho; Versionar trabalho no GitHub; Utilizar a ferramenta Kanban para organizar projeto no formato de metodologia ágil; Coleta dos dados; Realizar analise exploratória; Limpeza e tratamento dos dados; Salvar modelo treinado em arquivo r para posteriormente aplicar no framework tidymodels; Aplicar framework do tidymodels para desenvolver modelo; Avaliar resultados do modelo e necessidade de tunar os hiperparametros; Desenvolver um dashboard dinâmico com os pacotes flexdashboard, shiny e ploty; Realizar deploy do modelo and uploud in the shinyapp.ioVersionar trabalho no GitHubFoi criado um repositorio para ajudar no armazentamento de arquivos e versionamento de todo o projeto.Kanban para organizar projeto no formato de metodologia ágilEsta ferramenta serve para realizar gestão à vista do andamento de cada atividade ao longo do projeto.Coleta dos dadosPara construir uma primeira versão do modelo foram usados os dados históricos do índice Ibovespa futuro, filtrando o período de jan.2021 até jul.2022, disponíbilizados pelo site investing.com:Analise exploratóriaComeçamos carregando o arquivo csv extraido do site investing.com para dentro do rstudio para entender melhor o formato dos dados disponibilizados:#Limpando Enviroment e Carregando principais Bibliotecasrm(list = ls())library(tidymodels)library(readr)library(janitor)library(stringr)library(lubridate)library(ggplot2)library(plotly)library(DataExplorer)#carregando Base extraida do site investing e adicionando uma coluna chamada metabase &amp;lt;- readr::read_csv(&#39;Futuros Ibovespa - Dados Históricos.csv&#39;) %&amp;gt;% janitor::clean_names() %&amp;gt;% dplyr::mutate(data = lubridate::dmy(data), meta = dplyr::if_else(var_percent &amp;gt; 0,1,0) %&amp;gt;% forcats::as_factor()) %&amp;gt;% dplyr::arrange(data) #Avaliando tamanho da base e tipo primitivo dos dadosdplyr::glimpse(base) Avaliando o dataframe notamos que as dimensões são 8 colunas e 361 linhas.Trata-se de uma serie temporal com indexador de data mostrando as estatisticas do indice ibovespa ao longo de cada dia.Realizamos a tranformação da coluna data para um formato que utilizaremos, e também incluimos uma coluna chamada meta para entender o comportamento dos dados.A ideia é que sempre que tivermos uma variação percentual positiva, coluna ultimo apresentar valor maior do que a coluna abertura, a meta tenha o valor um e caso contrario valor seja zero.Rows: 361 Columns: 8 $ data &amp;lt;date&amp;gt; 2021-01-04, 2021-01-05, 2021-01-06, 2021-01-07, 2021-01-08, 2021-01-11, 2021-01-12, 2… $ ultimo &amp;lt;dbl&amp;gt; 118.859, 119.393, 119.180, 122.684, 125.127, 123.120, 124.336, 121.959, 123.488, 120.3… $ abertura &amp;lt;dbl&amp;gt; 120.320, 119.000, 119.195, 119.405, 123.050, 124.600, 123.805, 123.985, 122.775, 122.6… $ maxima &amp;lt;dbl&amp;gt; 120.575, 119.955, 121.075, 123.450, 125.475, 124.910, 124.715, 124.385, 124.040, 122.7… $ minima &amp;lt;dbl&amp;gt; 118.140, 116.770, 118.900, 119.235, 122.370, 122.465, 123.240, 121.015, 122.340, 120.0… $ vol &amp;lt;chr&amp;gt; &quot;162,34K&quot;, &quot;179,66K&quot;, &quot;182,04K&quot;, &quot;176,66K&quot;, &quot;190,05K&quot;, &quot;164,15K&quot;, &quot;113,43K&quot;, &quot;237,23K&quot;… $ var_percent &amp;lt;chr&amp;gt; &quot;-0,31%&quot;, &quot;0,45%&quot;, &quot;-0,18%&quot;, &quot;2,94%&quot;, &quot;1,99%&quot;, &quot;-1,60%&quot;, &quot;0,99%&quot;, &quot;-1,91%&quot;, &quot;1,25%&quot;, &quot;… $ meta &amp;lt;fct&amp;gt; 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1,…```Insigth: Avaliando a integridade dos dados para entender se por ventura temos algum valor ausente no dataset.Design: Para construção desse gráfico utilizamos a biblioteca DataExplorer que possui gráficos especializados na analise exploratória e facilitam a analise.#Avaliando tipos de dados e verificando dados faltantesDataExplorer::plot_intro(base)Como não encontramos dados ausentes seguimos para a próxima etapa que seria entender o comportamento dos dados ao longo do tempo.Insights:Analisando o gráfico notamos que o comportamento é variar dentro de um range de 100 a 140 pontos.Em alguns momentos essa oscilação é mais extrema do que em outros;Em alguns momentos existe certa tendencia mais evidente, e em outros notamos um comportamento aleatório.Design:Para construção desse gráfico utilizamos os pacotes ggplot e ploty buscando uma solução elegante que armonize a qualidade visual quanto interatividade.#Analisando gráfico da seríe temporalggplotly(ggplot(base,aes(x = data,y = ultimo))+ geom_line()+ geom_point(color=&#39;blue&#39;,size=1)+ ggtitle(&#39;Gráfico Cotação Diária&#39;)+ scale_x_date(date_breaks = &quot;1 month&quot;, date_labels = &quot;%b %d&quot;))## PhantomJS not found. You can install it with webshot::install_phantomjs(). If it is installed, please make sure the phantomjs executable can be found via the PATH variable.## PhantomJS not found. You can install it with webshot::install_phantomjs(). If it is installed, please make sure the phantomjs executable can be found via the PATH variable.## Error in path.expand(path): invalid &#39;path&#39; argument#Dividindo entre treino e testesplit_base &amp;lt;- initial_split(base,prop = .8)train_base &amp;lt;- training(split_base)test_base &amp;lt;- testing(split_base)# Criando modelo ----------------------------------------------------------lr_model &amp;lt;- logistic_reg() %&amp;gt;% set_mode(&#39;classification&#39;) %&amp;gt;% set_engine(&#39;glm&#39;)# Criando Recipe ----------------------------------------------------------lr_recipe &amp;lt;- recipe(meta ~ .,data = train_base) %&amp;gt;% step_rm(var_percent,vol) %&amp;gt;% prep()# Criando Workflow --------------------------------------------------------wkf_model &amp;lt;- workflow() %&amp;gt;% add_model(lr_model) %&amp;gt;% add_recipe(lr_recipe)# Treinando Modelo --------------------------------------------------------lr_result &amp;lt;- last_fit(wkf_model,split = split_base)# Avaliando Resultado -----------------------------------------------------#Accuracy and roc_auclr_result %&amp;gt;% collect_metrics()## # A tibble: 2 × 4## .metric .estimator .estimate .config ## &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; ## 1 accuracy binary 0.822 Preprocesso…## 2 roc_auc binary 0.915 Preprocesso…#Matriz de Confusãolr_result %&amp;gt;% unnest(.predictions) %&amp;gt;% conf_mat(truth = meta, estimate = .pred_class) %&amp;gt;% autoplot(type=&#39;heatmap&#39;)# Salvando modelo Final ---------------------------------------------------final_lr_result &amp;lt;- fit(wkf_model,base)saveRDS(object = final_lr_result,file = &#39;win_model.rds&#39;)Carregar Bibliotecas necessáriasknitr::opts_chunk$set(echo = TRUE)library(flexdashboard)library(shiny)## ## Attaching package: &#39;shiny&#39;## The following object is masked from &#39;package:infer&#39;:## ## observelibrary(tidymodels)library(readr)library(janitor)library(stringr)library(lubridate)library(ggplot2)library(plotly)library(patchwork)library(knitr)library(kableExtra)## ## Attaching package: &#39;kableExtra&#39;## The following object is masked from &#39;package:dplyr&#39;:## ## group_rowslibrary(quantmod)## Loading required package: xts## Loading required package: zoo## ## Attaching package: &#39;zoo&#39;## The following objects are masked from &#39;package:base&#39;:## ## as.Date, as.Date.numeric## ## Attaching package: &#39;xts&#39;## The following objects are masked from &#39;package:dplyr&#39;:## ## first, last## Loading required package: TTR## ## Attaching package: &#39;TTR&#39;## The following object is masked from &#39;package:dials&#39;:## ## momentum## Registered S3 method overwritten by &#39;quantmod&#39;:## method from## as.zoo.data.frame zooCarrega Modelo SalvoFiltros {.sidebar}--------------------------------------------------#Carrega Modelomodelo &amp;lt;- read_rds(&#39;win_model.rds&#39;)#Carrega Basebase &amp;lt;- getSymbols(Symbols = &#39;^BVSP&#39;)base &amp;lt;- BVSP %&amp;gt;% data.frame() %&amp;gt;% rownames_to_column() %&amp;gt;% clean_names() %&amp;gt;% rename(&quot;data&quot;=&#39;rowname&#39;,&quot;ultimo&quot;=&#39;bvsp_close&#39;,&quot;abertura&quot;=&#39;bvsp_open&#39;, &quot;maxima&quot;=&#39;bvsp_high&#39;,&quot;minima&quot;=&#39;bvsp_low&#39;, &#39;vol&#39;=&#39;bvsp_volume&#39;) %&amp;gt;% mutate(data = as_date(data), vol=as.character(vol), var_percent= as.character(paste0(round(((ultimo/lag(ultimo))-1)*100,2),&#39;%&#39;)), meta = if_else(var_percent &amp;gt; 0,1,0) %&amp;gt;% as.factor(), abertura= format(abertura,big.mark=&#39;.&#39;,decimal.mark=&#39;,&#39;) %&amp;gt;% as.numeric(), maxima= format(maxima,big.mark=&#39;.&#39;,decimal.mark=&#39;,&#39;) %&amp;gt;% as.numeric(), minima= format(minima,big.mark=&#39;.&#39;,decimal.mark=&#39;,&#39;) %&amp;gt;% as.numeric(), ultimo= format(ultimo,big.mark=&#39;.&#39;,decimal.mark=&#39;,&#39;) %&amp;gt;% as.numeric(), greenRed=ifelse(abertura-ultimo&amp;gt;0,&quot;Red&quot;,&quot;Green&quot;)) %&amp;gt;% select(-bvsp_adjusted) %&amp;gt;% filter(!is.na(ultimo))shiny::dateRangeInput(inputId = &#39;periodo&#39;,label = &#39;Período&#39;,start = max(base$data)-60,end = max(base$data),language = &#39;pt&#39;)#Botão para Download da sériedownloadHandler( filename = function() { paste(&quot;dataset-&quot;, Sys.Date(), &quot;.csv&quot;, sep=&quot;&quot;) }, content = function(file) { readr::write_csv(base %&amp;gt;% select(-c(var_percent,meta,greenRed)) %&amp;gt;% filter(data&amp;gt;= input$periodo[1] &amp;amp; data &amp;lt;= input$periodo[2]), file) })#Filtra último dia do banco de dadosnovo_dado &amp;lt;- base %&amp;gt;% filter(data == max(data))#Aplica o modelo para obter a probabilidade de movimento do dia seguinteresultado_valor &amp;lt;- round(if_else(predict(object = modelo, new_data = novo_dado)==0, predict(object = modelo, new_data = novo_dado,type = &#39;prob&#39;) %&amp;gt;% pull(1), predict(object = modelo, new_data = novo_dado,type = &#39;prob&#39;) %&amp;gt;% pull(2))*100, 2)resultado_label=if_else(predict(object = modelo, new_data = novo_dado)==0,&#39;Baixa&#39;,&#39;Alta&#39;)## Error: &amp;lt;text&amp;gt;:1:9: unexpected &#39;{&#39;## 1: Filtros {## ^Row {data-height=300}Probabilidade e direção do Movimento#Informa dentro do dashboardrenderGauge({gauge(value = resultado_valor,label = resultado_label, min = 0, max = 100, symbol = &#39;%&#39;, gaugeSectors( success = c(80, 100), warning = c(40, 79), danger = c(0, 39)))})Concentração Dos DadosrenderPlot({p1 &amp;lt;- ggplot(base %&amp;gt;% filter(data&amp;gt;= input$periodo[1] &amp;amp; data &amp;lt;= input$periodo[2]))+ geom_density(aes(x =ultimo),fill=&#39;blue&#39;,alpha=.25)+ geom_vline(xintercept = novo_dado %&amp;gt;% pull(ultimo) ,color=&#39;orange&#39;)+ ylab(&#39;&#39;)+xlab(&#39;&#39;)+ theme(axis.text.y = element_blank(), axis.ticks.y = element_blank())p2 &amp;lt;- ggplot(base %&amp;gt;% filter(data&amp;gt;= input$periodo[1] &amp;amp; data &amp;lt;= input$periodo[2]))+ geom_boxplot(aes(x =ultimo,y = 1),fill=&#39;blue&#39;,alpha=.25)+ geom_vline(xintercept = novo_dado %&amp;gt;% pull(ultimo) ,color=&#39;orange&#39;)+ ylab(&#39;&#39;)+xlab(&#39;&#39;)+ theme(axis.text.y = element_blank(), axis.ticks.y = element_blank())p1 / p2})Row {data-height=700}Comportamento HistóricorenderPlotly({ ggplot(data = base %&amp;gt;% filter(data&amp;gt;= input$periodo[1] &amp;amp; data &amp;lt;= input$periodo[2]))+ geom_segment(aes(x = data, xend=data, y =abertura, yend =ultimo, colour=greenRed), size=3)+ geom_segment(aes(x = data, xend=data, y =maxima, yend =minima, colour=greenRed))+ scale_color_manual(values=c(&quot;Forest Green&quot;,&quot;Red&quot;))+ theme(legend.position =&quot;none&quot;, axis.title.y = element_blank(), axis.title.x=element_blank(), axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), plot.title= element_text(hjust=0.5)) })Previsão com Regressão LinearrenderPlotly({ ggplot(data = base %&amp;gt;% filter(data&amp;gt;= input$periodo[1] &amp;amp; data &amp;lt;= input$periodo[2]))+ geom_smooth(aes(x =data, y = ultimo))+ ylab(&#39;&#39;)+xlab(&#39;&#39;)})" }, { "title": "Buy Smartphone with Data Science", "url": "/posts/Buy-Smartphone-with-Data-Science/", "categories": "Data Science, Tydeverse", "tags": "Text Mining, Web Scraping, Tydeverse, Data Science, ETL, Strategic Sourcing, Procurement, Supply Chain", "date": "2022-01-28 00:00:00 -0300", "snippet": "This post has the main objective to sharing my experience with abusiness case, where i pretend tell how i buyed a new smartphone usingthe data science and strategic sourcing techniques.In jan/2021 i needed buy a new smartphone, then I thinking with me: Whynot using data science to develop a machine learning model to help me?This project is divide in 5 parts: Getting the data by web scraping; Cleaning the data; Start an exploratory analysis in the data; Setting the “weights” and create a model to help filter somedevices; Conclusion: choosing “the best” device.1. Getting the data by web scrapingReading the main URL to obtain data about html page and then start webscraping process:aparelhos&amp;lt;- tibble::tibble(url = unique(paste(&#39;https://www.tudocelular.com&#39;, rvest::read_html(&#39;https://www.tudocelular.com/celulares/fichas-tecnicas.html&#39;) %&amp;gt;% rvest::html_elements(xpath = &#39;//*[@id=&quot;cellphones_list&quot;]/article&#39;) %&amp;gt;% rvest::html_nodes(&#39;a&#39;) %&amp;gt;% rvest::html_attr(&#39;href&#39;),sep = &#39;&#39;))) %&amp;gt;% dplyr::filter(stringr::str_detect(string = url, pattern = &#39;ficha&#39;)) %&amp;gt;% dplyr::mutate(url = as.character(url))slice_head(aparelhos,n = 5)## # A tibble: 5 × 1## url ## &amp;lt;chr&amp;gt; ## 1 https://www.tudocelular.com/vivo/fichas-tecnicas/n8042/vivo-V25e.html ## 2 https://www.tudocelular.com/vivo/fichas-tecnicas/n8106/vivo-Y16.html ## 3 https://www.tudocelular.com/vivo/fichas-tecnicas/n8100/vivo-iQOO-Z6x.html ## 4 https://www.tudocelular.com/vivo/fichas-tecnicas/n8091/vivo-iQOO-Z6-China.html## 5 https://www.tudocelular.com/Redmi/fichas-tecnicas/n8097/Redmi-Note-11-SE-ndia…Developing of function to do web scraping and then obtain the data abouteach device:fun_to_get_info &amp;lt;- function(phone) { url_link&amp;lt;- rvest::read_html(as.character(phone)) telefone &amp;lt;-tibble::tibble( nomes = url_link %&amp;gt;% rvest::html_elements(xpath = &#39;//*[@id=&quot;controles_titles&quot;]&#39;) %&amp;gt;% rvest::html_nodes(&#39;li&#39;) %&amp;gt;% rvest::html_text() %&amp;gt;% readr::parse_character(), atributos = ifelse( !is.na(url_link %&amp;gt;% rvest::html_elements(xpath = &#39;//*[@id=&quot;phone_columns&quot;]&#39;) %&amp;gt;% rvest::html_nodes(&#39;li&#39;) %&amp;gt;% rvest::html_text() %&amp;gt;% readr::parse_character()), url_link %&amp;gt;% rvest::html_elements(xpath = &#39;//*[@id=&quot;phone_columns&quot;]&#39;) %&amp;gt;% rvest::html_nodes(&#39;li&#39;) %&amp;gt;% rvest::html_text() %&amp;gt;% readr::parse_character(), url_link %&amp;gt;% rvest::html_elements(xpath = &#39;//*[@id=&quot;phone_columns&quot;]&#39;) %&amp;gt;% rvest::html_nodes(&#39;li&#39;) %&amp;gt;% rvest::html_node(&#39;i&#39;) %&amp;gt;% rvest::html_attr(&#39;class&#39;) %&amp;gt;% readr::parse_character() ) ) %&amp;gt;% dplyr::mutate(&#39;Nome do Aparelho&#39; = url_link %&amp;gt;% rvest::html_elements(xpath = &#39;//*[@id=&quot;fwide_column&quot;]/h2&#39;) %&amp;gt;% rvest::html_text()) return(telefone)}Apply function to do download the data and presentation on the beautifultable:htop&amp;lt;- purrr::map_dfr(.x = aparelhos$url, .f = fun_to_get_info) %&amp;gt;% tidyr::pivot_wider(names_from = &#39;nomes&#39;, values_from = atributos, values_fn = list) %&amp;gt;% janitor::clean_names() %&amp;gt;% as_tibble()knitr::kable(x = slice_head(htop,n = 5), caption = &quot;The top Devices&quot;) nome_do_aparelho sistema_operacional disponibilidade dimensoes peso hardware tela camera desempenho sim_card dual_sim gsm hspa lte velocidade_maxima_de_download velocidade_maxima_de_upload processador chipset x64_bit gpu ram memoria_max memoria_expansivel polegadas resolucao densidade_de_pixels tipo fps cores megapixel aperture_size estabilizacao autofoco foco_por_toque flash hdr dual_shot localizacao deteccao_facial camera_frontal resolucao_da_gravacao auto_focagem_de_video slow_motion dual_rec opcoes_da_camera_frontal wi_fi bluetooth usb nfc gps acelerometro proximidade giroscopio bussola impressao_digital tv vibracao viva_voz outros ampere radio_fm x5g fps_da_gravacao video_camera_frontal autonomia_conversacao autonomia_em_standby estabilizacao_de_video protecao tamanho_do_sensor angulo_maximo foto_em_video irda stereo_sound_rec barometro mic_de_reducao_de_ruido sar_eu melhor_preco preco_extra faixa_de_preco custo_beneficio video_hdr deteccao_de_sorriso segundo_display zoom_otico foto_3d gesto resistencia_a_agua vivo V25e Android 12 Funtouch 12 2022/3 159.2 x 74.2 x 7.79 mm 183 gramas 6.6 / 10 8.5 / 10 7.7 / 10 5 / 10 Nano Dual stand-by Quad Band (850/900/1800/1900) ok ok 390 Mbps 150 Mbps 2x 2.2 GHz Cortex-A76 + 6x 2.0 GHz Cortex-A55 Helio G99 MediaTek ok Mali-G57 MC2 8 GB 256 GB Slot híbrido SIM/MicroSD MicroSDXC atè 1024 GB 6.44 1080 x 2404 pixel, 9238 x 6928 pixel 409 ppi AMOLED, LiPo 60 Hz 16 milhões 64 Mp + 2 Mp + 2 Mp F 1.79 + F 2.4 + F 2.4 Ótica ok ok LED ok ok ok ok 32 Mp F 2 wrong ok ok ok Face Detection 802.11 a/b/g/n/ac 5.2 com A2DP/LE Type-C 2.0 wrong A-GPS/GLONASS/BeiDou/Galileo/QZSS ok ok ok ok ok wrong ok ok Wi-Fi DirectWi-Fi hotspotUSB OTG 4500 mAh NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL vivo Y16 Android 12 Funtouch 12 2022/3 163.95 x 75.55 x 8.19 mm 183 gramas 5.3 / 10 5.3 / 10 5.7 / 10 4.7 / 10 Nano Dual stand-by Quad Band (850/900/1800/1900) ok ok 300 Mbps 150 Mbps 4x 2.3 GHz Cortex-A53 + 4x 1.8 GHz Cortex-A53 Helio P35 MediaTek MT6765 ok PowerVR GE8320 3 GB 32 GB MicroSDXC 6.51 720 x 1600 pixel , 4163 x 3122 pixel 270 ppi IPS LCD, LiPo 60 Hz 16 milhões 13 Mp + 2 Mp F 2.2 + F 2.4 Digital ok ok LED NULL NULL ok ok 5 Mp F 2.2 wrong ok NULL NULL NULL 802.11 a/b/g/n/ac 5.0 com A2DP/LE Type-C 2.0 wrong A-GPS/GLONASS/BeiDou/Galileo ok ok ok ok ok wrong ok ok Wi-Fi hotspotUSB OTG 5000 mAh ok NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL vivo iQOO Z6x Android 11 OriginOS Ocean 2022/3 163.87 x 75.33 x 9.27 mm 204 gramas 7.8 / 10 8.4 / 10 7.6 / 10 5 / 10 Nano Dual stand-by Quad Band (850/900/1800/1900) ok ok 2770 Mbps - 2x 2.4 GHz Cortex-A76 + 6x 2.0 GHz Cortex-A55 Dimensity 810 MediaTek ok Mali-G57 MC2 6 GB 128 GB wrong 6.58 1080 x 2408 pixel, 8165 x 6124 pixel 401 ppi IPS LCD, LiPo 60 Hz 16 milhões 50 Mp + 2 Mp F 1.8 + F 2.4 Digital ok ok Dual LED ok ok ok ok 8 Mp F 2 Full HD ok NULL ok Face Detection 802.11 a/b/g/n/ac 5.1 com A2DP/LE/aptX HD Type-C 2.0 wrong A-GPS/GLONASS/BeiDou/Galileo/QZSS ok ok wrong ok ok wrong ok ok Wi-Fi DirectWi-Fi hotspotUSB OTG 6000 mAh wrong ok 30 fps Full HD, 30fps 1080 minutos 849 horas NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL vivo iQOO Z6 (China) Android 12 OriginOS Ocean 2022/3 164.17 x 75.8 x 8.59 mm 194.6 gramas 7.3 / 10 8.4 / 10 8.3 / 10 6.9 / 10 Nano Dual stand-by Quad Band (850/900/1800/1900) ok ok 3700 Mbps 1600 Mbps 1x 2.5 GHz Cortex-A78 + 3x 2.4 GHz Cortex-A78 + 4x 1.8 GHz Cortex-A55 Snapdragon 778G Plus Qualcomm SM7325-AE ok Adreno 642L 8 GB 256 GB wrong 6.64 1080 x 2388 pixel, 9238 x 6928 pixel 395 ppi IPS LCD, LiPo 120 Hz 16 milhões 64 Mp + 2 Mp + 2 Mp F 1.79 + F 2.4 + F 2.4 Ótica ok ok Dual LED ok ok ok ok 8 Mp F 2 4K (2160p) ok ok ok Face Detection 802.11 a/b/g/n/ac/6 5.2 com A2DP/LE/aptX HD Type-C 2.0 ok A-GPS/GLONASS/BeiDou/Galileo/QZSS ok ok ok ok ok wrong ok ok Wi-Fi DirectWi-Fi hotspotUSB OTG 4500 mAh wrong ok 30 fps Full HD, 30fps 780 minutos 429 horas ok NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL Redmi Note 11 SE (Índia) Android 11 MIUI 12.5 2022/3 160.46 x 74.5 x 8.29 mm 178.8 gramas 7.8 / 10 8.5 / 10 8.1 / 10 4.8 / 10 Nano Dual stand-by Quad Band (850/900/1800/1900) ok ok 600 Mbps 150 Mbps 2x 2.05 GHz Cortex-A76 + 6x 2.0 GHz Cortex-A55 Helio G95 MediaTek ok Mali-G76 MC4 6 GB 128 GB MicroSDXC 6.43 1080 x 2400 pixel, 9238 x 6928 pixel 409 ppi Super AMOLED, LiPo 60 Hz 16 milhões 64 Mp + 8 Mp + 2 Mp + 2 Mp F 1.9 + F 2.2 + F 2.4 + F 2.4 Digital ok ok LED ok NULL ok ok 13 Mp F 2.45 4K (2160p) ok ok NULL Face Detection 802.11 a/b/g/n/ac 5.0 com A2DP/LE Type-C 2.0 ok A-GPS/GLONASS/BeiDou/Galileo ok ok ok ok ok wrong ok ok Wi-Fi DirectWi-Fi hotspot 5000 mAh ok NULL 30 fps Full HD, 30fps NULL NULL NULL Gorilla Glass 3 1/1.97 “ + 1/4.0 “ 118 ° ok ok NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL NULL The top Devices2. Cleaning the datateste&amp;lt;-htop %&amp;gt;% keep( ~!is.null(.))teste&amp;lt;-htop %&amp;gt;% filter(complete.cases(across(.cols = nome_do_aparelho:estabilizacao_de_video,.fns = ~. == &#39;NULL&#39;)))3. Start an exploratory analysis in the data4. Setting the “weights” and create a model to help filter some devices5. Conclusion: choosing “the best” device" }, { "title": "Tydeverse", "url": "/posts/The_main_tags/", "categories": "Data Science", "tags": "Tydeverse, R, Rstudio, Machine Learning, Deep Learning, Cleaning Data, Dashboard, Shiny, Resume, Python, Linux, Bash, Ggplot, Dplyr, Rmarkdown, Excel, VBA, Windows, SQL, EDA, ETL, RPA, Git, GitHub, Web Scraping", "date": "2022-01-01 00:00:00 -0300", "snippet": "" } ]
